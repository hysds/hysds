version: 2.1
jobs:
  code-analysis:
    docker:
      - image: cimg/python:3.12
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - run:
          name: code-analysis
          command: |
            pip install flake8 flake8-junit-report
            mkdir -p test-results/flake8
            flake8 . --output-file=/tmp/flake8.txt --exit-zero --ignore=E401,E402
            flake8_junit /tmp/flake8.txt test-results/flake8/results.xml
            #set +e
            #flake8 . --output-file=/tmp/flake8.txt
            #exit_code=$?
            #flake8_junit /tmp/flake8.txt test-results/flake8/results.xml
            #exit $exit_code
      - store_test_results:
          path: test-results
  test:
    docker:
      - image: hysds/pge-base:latest
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - run:
          name: Test
          command: |
            source $HOME/.bash_profile
            pip install -e .
            cp configs/celery/celeryconfig.py.tmpl celeryconfig.py
            pytest -s --junit-xml=test-results/pytest/results.xml test
      - store_test_results:
          path: test-results
  build:
    docker:
      - image: cimg/python:3.12
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            pip install pytest==7.2.0
            pip install .
      - run:
          name: pytest
          command: |
            pytest .
  publish-pypi:
    docker:
      - image: cimg/python:3.12
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - run:
          name: Init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "repository: https://upload.pypi.org/legacy/" >> ~/.pypirc
            echo -e "username: $PYPI_USER" >> ~/.pypirc
            echo -e "password: $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: Install tools
          command: |
            pip install twine==4.0.2
      - run:
          name: Install and publish to PyPI
          command: |
            pip install .
            python setup.py sdist bdist_wheel
            twine upload dist/* --verbose --config-file ~/.pypirc

workflows:
  version: 2
  pr-checks:
    jobs:
      - code-analysis:
          context:
            - docker-hub-creds
            - git-oauth-token
      - test:
          context:
            - docker-hub-creds
            - git-oauth-token
  weekly:
    triggers:
      - schedule:
          cron: "0 7 * * 0"
          filters:
            branches:
              only:
                - develop
    jobs:
      - test:
          context:
            - docker-hub-creds
            - git-oauth-token
          filters:
            branches:
              only: develop
      - code-analysis:
          context:
            - docker-hub-creds
            - git-oauth-token
          filters:
            branches:
              only: develop
  build-and-deploy:
    jobs:
      - build:
          context:
            - docker-hub-creds
            - git-oauth-token
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - publish-pypi:
          context:
            - docker-hub-creds
            - git-oauth-token
            - pypi-creds
          requires:
            - build
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
